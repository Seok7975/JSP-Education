/*
 * package com.example;
 * 
 * import java.io.Serializable;
 * 
 * public class Task implements Serializable { private static final long
 * serialVersionUID = 1L; private String id; private String item; private String
 * startDateTime; private String dueDateTime; private boolean completed;
 * 
 * public Task(String id, String item, String startDateTime, String dueDateTime)
 * { this.id = id; this.item = item; this.startDateTime = startDateTime;
 * this.dueDateTime = dueDateTime; this.completed = false; }
 * 
 * public String getId() { return id; }
 * 
 * public String getItem() { return item; }
 * 
 * public String getStartDateTime() { return startDateTime; }
 * 
 * public String getDueDateTime() { return dueDateTime; }
 * 
 * public boolean isCompleted() { return completed; }
 * 
 * public void setCompleted(boolean completed) { this.completed = completed; } }
 */

package com.example;

import java.io.Serializable;
import java.util.List;
import java.util.ArrayList;

public class Task implements Serializable {
    private static final long serialVersionUID = 1L;
    private String id;
    private String item;
    private String startDateTime;
    private String dueDateTime;
    private boolean completed;

    public Task(String id, String item, String startDateTime, String dueDateTime) {
        this.id = id;
        this.item = item;
        this.startDateTime = startDateTime;
        this.dueDateTime = dueDateTime;
        this.completed = false;
    }

    public String getId() {
        return id;
    }

    public String getItem() {
        return item;
    }

    public String getStartDateTime() {
        return startDateTime;
    }

    public String getDueDateTime() {
        return dueDateTime;
    }

    public boolean isCompleted() {
        return completed;
    }

    public void setCompleted(boolean completed) {
        this.completed = completed;
    }

    // 예제 데이터를 반환하는 메서드
    public static List<Task> getTasks() {
        List<Task> tasks = new ArrayList<>();
        tasks.add(new Task("1", "Task 1", "2024-06-17 10:00", "2024-06-18 10:00"));
        tasks.add(new Task("2", "Task 2", "2024-06-18 11:00", "2024-06-19 11:00"));
        return tasks;
    }
}
