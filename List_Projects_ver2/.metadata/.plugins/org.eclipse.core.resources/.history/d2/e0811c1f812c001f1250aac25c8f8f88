package com.example;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class TaskDAO {
    private Connection conn;
    private PreparedStatement pstmt;
    private ResultSet rs;

    public TaskDAO() {
        try {
            String dbURL = "jdbc:mysql://localhost:3306/BBS";
            String dbID = "root";
            String dbPassword = "1234";
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public List<Task> getTasks(String userID) {
        String SQL = "SELECT * FROM tasks WHERE userID = ?";
        List<Task> tasks = new ArrayList<>();
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                Task task = new Task(
                    rs.getString("id"),
                    rs.getString("item"),
                    rs.getString("startDateTime"),
                    rs.getString("dueDateTime")
                );
                task.setCompleted(rs.getBoolean("completed"));
                tasks.add(task);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return tasks;
    }

    public int addTask(Task task, String userID) {
        String SQL = "INSERT INTO tasks (userID, item, startDateTime, dueDateTime, completed) VALUES (?, ?, ?, ?, ?)";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, userID);
            pstmt.setString(2, task.getItem());
            pstmt.setString(3, task.getStartDateTime());
            pstmt.setString(4, task.getDueDateTime());
            pstmt.setBoolean(5, task.isCompleted());
            return pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1;
    }

    public int updateTask(Task task) {
        String SQL = "UPDATE tasks SET item = ?, startDateTime = ?, dueDateTime = ?, completed = ? WHERE id = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, task.getItem());
            pstmt.setString(2, task.getStartDateTime());
            pstmt.setString(3, task.getDueDateTime());
            pstmt.setBoolean(4, task.isCompleted());
            pstmt.setString(5, task.getId());
            return pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1;
    }

    public int deleteTask(String id) {
        String SQL = "DELETE FROM tasks WHERE id = ?";
        try {
            pstmt = conn.prepareStatement(SQL);
            pstmt.setString(1, id);
            return pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1;
    }
}
